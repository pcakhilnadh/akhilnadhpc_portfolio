steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '--no-cache',
      '--progress=plain',
      '-t', '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$COMMIT_SHA',
      '-t', '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:latest',
      '-t', '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$BRANCH_NAME',
      '.'
    ]
    dir: '.'
    id: 'build-image'
    env:
      - 'DOCKER_BUILDKIT=1'

  # Step 2: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$COMMIT_SHA'
    ]
    id: 'push-image-commit'
    waitFor: ['build-image']

  # Step 3: Add 'latest' tag to the pushed image
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'container',
      'images',
      'add-tag',
      '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$COMMIT_SHA',
      '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:latest',
      '--quiet'
    ]
    id: 'tag-image-latest'
    waitFor: ['push-image-commit']

  # Step 4: Add branch name tag to the pushed image
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'container',
      'images',
      'add-tag',
      '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$COMMIT_SHA',
      '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$BRANCH_NAME',
      '--quiet'
    ]
    id: 'tag-image-branch'
    waitFor: ['push-image-commit']

  # Step 5: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run',
      'deploy',
      '$_SERVICE_NAME',
      '--image=$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$COMMIT_SHA',
      '--region=$_REGION',
      '--platform=managed',
      '--allow-unauthenticated',
      '--port=8080',
      # '--memory=512Mi',
      # '--cpu=0.5',
      # '--max-instances=5',
      # '--min-instances=0',
      # '--concurrency=40',
      # '--timeout=300',
      # '--cpu-boost',
      # '--execution-environment=gen2',
      # '--update-env-vars=PYTHONUNBUFFERED=1,PYTHONDONTWRITEBYTECODE=1,RELOAD=false',
      # '--clear-cloudsql-instances',
      '--service-account=',
      '--no-cpu-throttling'
    ]
    id: 'deploy-cloud-run'
    waitFor: ['tag-image-latest', 'tag-image-branch']

  # Step 6: Perform health check
  - name: 'gcr.io/cloud-builders/curl'
    entrypoint: bash
    args:
      - '-c'
      - |
        SERVICE_URL=$(gcloud run services describe $_SERVICE_NAME --region=$_REGION --format='value(status.url)')
        curl -f -m 30 --retry 3 --retry-delay 5 "$$SERVICE_URL/health"
    id: 'health-check'
    waitFor: ['deploy-cloud-run']

# Total timeout: 20 minutes
timeout: '1200s'

# Build options (safe for default pool)
options:
  logging: CLOUD_LOGGING_ONLY
  diskSizeGb: '100'
  env:
    - 'DOCKER_BUILDKIT=1'
    - 'COMPOSE_DOCKER_CLI_BUILD=1'

# Substitutions for flexibility
substitutions:
  _REGION: 'asia-southeast1'
  _PROJECT_ID: 'ferrous-linker-457013-s2'
  _REPOSITORY: 'portfolio-docker-cicd'
  _SERVICE_NAME: 'akhilnadhpc-portfolio'
  _IMAGE_NAME: 'akhilnadhpc-portfolio' 