# Cloud Build configuration for Akhil Nadh PC Portfolio
# Deploys to Google Cloud Run with Artifact Registry
# Project: ferrous-linker-457013-s2
# Region: asia-southeast1
# Repository: portfolio-docker-cicd
# Service: akhilnadhpc-portfolio

# ðŸ’° COST OPTIMIZED FOR PORTFOLIO PROJECTS:
# - Memory: 512Mi (sufficient for portfolio traffic)
# - CPU: 0.5 (adequate for typical usage)
# - Max Instances: 5 (scales as needed)
# - Estimated Cost: $1-3/month (after free tier)

steps:
  # Step 1: Build the Docker image with multi-stage build
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '--no-cache',  # Ensure clean build
      '--progress=plain',  # Better build output
      '-t', 'asia-southeast1-docker.pkg.dev/ferrous-linker-457013-s2/portfolio-docker-cicd/akhilnadhpc-portfolio:$COMMIT_SHA',
      '-t', 'asia-southeast1-docker.pkg.dev/ferrous-linker-457013-s2/portfolio-docker-cicd/akhilnadhpc-portfolio:latest',
      '-t', 'asia-southeast1-docker.pkg.dev/ferrous-linker-457013-s2/portfolio-docker-cicd/akhilnadhpc-portfolio:$BRANCH_NAME',
      '.'
    ]
    dir: '.'
    id: 'build-image'
    env:
      - 'DOCKER_BUILDKIT=1'

  # Step 2: Push images to Artifact Registry with proper tagging
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      'asia-southeast1-docker.pkg.dev/ferrous-linker-457013-s2/portfolio-docker-cicd/akhilnadhpc-portfolio:$COMMIT_SHA'
    ]
    id: 'push-image-commit'
    waitFor: ['build-image']

  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      'asia-southeast1-docker.pkg.dev/ferrous-linker-457013-s2/portfolio-docker-cicd/akhilnadhpc-portfolio:latest'
    ]
    id: 'push-image-latest'
    waitFor: ['build-image']

  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      'asia-southeast1-docker.pkg.dev/ferrous-linker-457013-s2/portfolio-docker-cicd/akhilnadhpc-portfolio:$BRANCH_NAME'
    ]
    id: 'push-image-branch'
    waitFor: ['build-image']

  # Step 3: Deploy to Cloud Run with cost-optimized configuration
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run',
      'deploy',
      'akhilnadhpc-portfolio',
      '--image=asia-southeast1-docker.pkg.dev/ferrous-linker-457013-s2/portfolio-docker-cicd/akhilnadhpc-portfolio:$COMMIT_SHA',
      '--region=asia-southeast1',
      '--platform=managed',
      '--allow-unauthenticated',  # Make service public
      '--port=8080',
      '--memory=512Mi',  # Optimized for portfolio projects
      '--cpu=0.5',  # Sufficient for typical usage
      '--max-instances=5',  # Scales as needed
      '--min-instances=0',  # Scale to zero when not used (cost saver)
      '--concurrency=40',  # Optimized concurrency
      '--timeout=300',
      '--cpu-boost',  # Enable CPU boost for better performance
      '--execution-environment=gen2',  # Use 2nd gen execution environment
      '--set-env-vars=PYTHONUNBUFFERED=1,PYTHONDONTWRITEBYTECODE=1,HOST=127.0.0.1,PORT=8000,RELOAD=false',
      '--update-env-vars=PYTHONUNBUFFERED=1,PYTHONDONTWRITEBYTECODE=1,HOST=127.0.0.1,PORT=8000,RELOAD=false',
      '--set-cloudsql-instances=',  # No Cloud SQL needed for this app
      '--add-cloudsql-instances=',
      '--remove-cloudsql-instances=',
      '--clear-cloudsql-instances',
      '--service-account=',  # Use default service account
      '--no-cpu-throttling',  # Disable CPU throttling for better performance
      '--no-traffic',  # Don't send traffic to new revision initially
      '--tag=latest'  # Tag the deployment
    ]
    id: 'deploy-cloud-run'
    waitFor: ['push-image-commit', 'push-image-latest', 'push-image-branch']

  # Step 4: Send traffic to new revision
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run',
      'services',
      'update-traffic',
      'akhilnadhpc-portfolio',
      '--region=asia-southeast1',
      '--to-latest'
    ]
    id: 'update-traffic'
    waitFor: ['deploy-cloud-run']

  # Step 5: Verify deployment with health check
  - name: 'gcr.io/cloud-builders/curl'
    args: [
      '-f',
      '-m', '30',
      '--retry', '3',
      '--retry-delay', '5',
      '$(gcloud run services describe akhilnadhpc-portfolio --region=asia-southeast1 --format="value(status.url)")/health'
    ]
    id: 'health-check'
    waitFor: ['update-traffic']

# Build timeout (20 minutes)
timeout: '1200s'

# Build options for better performance
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'  # High CPU for faster builds
  diskSizeGb: '100'  # Larger disk for multi-stage builds
  env:
    - 'DOCKER_BUILDKIT=1'
    - 'COMPOSE_DOCKER_CLI_BUILD=1'

# Substitutions for easy customization
substitutions:
  _REGION: 'asia-southeast1'
  _PROJECT_ID: 'ferrous-linker-457013-s2'
  _REPOSITORY: 'portfolio-docker-cicd'
  _SERVICE_NAME: 'akhilnadhpc-portfolio'
  _IMAGE_NAME: 'akhilnadhpc-portfolio'

# Available substitutions (automatically provided by Cloud Build)
availableSubstitutions:
  COMMIT_SHA: 'The commit SHA that triggered the build'
  BRANCH_NAME: 'The branch name that triggered the build'
  TAG_NAME: 'The tag name that triggered the build'
  REVISION_ID: 'The revision ID of the build'
  SHORT_SHA: 'The first 7 characters of the commit SHA'
  BUILD_ID: 'The unique identifier for the build'
  PROJECT_ID: 'The project ID where the build is running'
  REPO_NAME: 'The name of the repository'
  TRIGGER_NAME: 'The name of the trigger that started the build' 